'à coller ici : https://www.plantuml.com/plantuml/uml/SyfFKj2rKt3CoKnELR1Io4ZDoSa70000

@startuml
package Diagramme_classe_objet {

class Administrateur{
+ id_admin : int
+ pseudo : str

+__init__()
}

class Joueur{
+ id_joueur : int
+ pseudo : str
+ nom : str
+ prenom : str
+ mail : str
+ personnages : list[Personnage]

+__init__()
}

class MaitreJeu{
+__init__()
}


class Séance{
+id_séance : int
+debut : time
+fin : time
+description : str

+__init__()
}


class TableJeu{
+ id_table : int
+ séance : Séance
+ scenario : str
+ maitre_jeu : MaitreJeu
+ joueurs : list[Joueur]

+__init__()
}

class Personnage{
+ id_personnage : int
+ nom : str
+ classe : str
+ niveau : int
+ competences : list[str]
+ langues_parlées : list[str]

+__init__()
}


TableJeu o-- Joueur
TableJeu -- MaitreJeu
TableJeu -- Séance
Personnage --* Joueur

Joueur <|-- MaitreJeu
}


package Diagramme_classe_service {
class AdministrateurService{
+ __init__()
+ creer_table(Table) ; bool
+ supprimer_table(Table) : bool
+ supprimer_joueur(Joueur) : bool
+ deplacer_joueur(Joueur, Table) : bool
+ voir_programme_complet() : none
+ se_deconnecter() : none

}
 

class JoueurService{
+ __init__()
+ creer(Joueur) : bool
+ supprimer(Joueur) : bool
+ creer_personnage(Personnage) : bool
+ supprimer_personnage(Personnage) : bool
+ lister_personnages(Joueur) : list[Personnage]
+ voir_tables(Joueur) : none
+ rejoindre_table(Table, Personnage) : bool
+ quitter_table(Table) : bool
+ se_deconnecter() : none
}


class MaîtreJeuService{
+ __init__()
+ gerer_table(Table, scenario) : bool
+ resilier_table(Table) : bool
+ voir_joueur(Table) : none
}


class PersonnageService{
+ __init__()
+ creer(Personnage) : bool
+ supprimer(Personnage) : bool
+ importer_info_api() : none
}



class TableJeuService{
+ __init__()
+ creer(Table) : bool
+ supprimer(Table) : bool
}

}

package Diagramme_classe_vue{
class AccueilVue{
+ __init__()
+ creer_joueur(Table) : bool
+ se_connecter(pseudo) : Admin ou Joueur ?
+ quitter()
}


class AdministrateurVue{
+ __init__()
+ creer_table(Table) : bool
+ supprimer_table(Table) : bool
+ supprimer_joueur(Joueur) : bool
+ deplacer_joueur(Joueur, Table) : bool
+ voir_sommaire() : none
+ se_deconnecter() : none
}
 

class JoueurVue{
+ __init__()
+ creer_personnage(Personnage) : bool
+ supprimer_personnage(Personnage) : bool
+ lister_personnages(Joueur) : list[Personnage]
+ voir_programme(Joueur) : none
+ rejoindre_table(Table, Personnage) : bool
+ quitter_table(Table) : bool
+ se_deconnecter() : none
}


class MaîtreJeuVue{
+ __init__()
+ gerer_table(Table, scenario) : bool
+ resilier_table(Table) : bool
+ voir_joueur(Table) : none
}

}

JoueurVue -- JoueurService
JoueurVue -- PersonnageService
AdministrateurVue -- AdministrateurService
MaîtreJeuVue -- MaîtreJeuService
AdministrateurVue -- TableJeuService

@enduml
